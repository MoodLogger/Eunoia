
// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Mood pattern analysis AI agent.
 *
 * - analyzeMoodPatterns - A function that handles the mood pattern analysis process.
 * - AnalyzeMoodPatternsInput - The input type for the analyzeMoodPatterns function.
 * - AnalyzeMoodPatternsOutput - The return type for the analyzeMoodPatterns function.
 */

import {ai} from '@/ai/ai-instance';
import {z} from 'genkit';

const AnalyzeMoodPatternsInputSchema = z.object({
  moodData: z
    .string()
    .describe(
      'A stringified JSON array of objects, where each object represents a day and its mood. Each object has date (ISO-8601 format) and mood properties (e.g., "happy", "sad", "neutral", "angry", or null).'
    ),
  themeScores: z
    .string()
    .describe(
      'A stringified JSON array of objects, where each object represents a day and the scores (ranging from -2 to +2, where -2 is very negative, 0 is neutral, +2 is very positive) for each of the themes. Each object has date (ISO-8601 format) and scores for themes such as dreaming, moodScore (representing mood quality/stability), training, diet, social relations, family relations, self education.' // Added moodScore
    ),
});
export type AnalyzeMoodPatternsInput = z.infer<typeof AnalyzeMoodPatternsInputSchema>;

const AnalyzeMoodPatternsOutputSchema = z.object({
  insights: z.string().describe('Insights on factors influencing mood based on the logged data, including observed correlations and actionable suggestions.'),
});
export type AnalyzeMoodPatternsOutput = z.infer<typeof AnalyzeMoodPatternsOutputSchema>;

export async function analyzeMoodPatterns(input: AnalyzeMoodPatternsInput): Promise<AnalyzeMoodPatternsOutput> {
  return analyzeMoodPatternsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'analyzeMoodPatternsPrompt',
  input: {
    schema: z.object({
      moodData: z
        .string()
        .describe(
          'A stringified JSON array of objects, where each object represents a day and its mood. Each object has date (ISO-8601 format) and mood properties.'
        ),
      themeScores: z
        .string()
        .describe(
          'A stringified JSON array of objects, where each object represents a day and the scores (ranging from -2 to +2) for each of the themes. Each object has date (ISO-8601 format) and scores for themes such as dreaming, moodScore (mood quality/stability), training, diet, social relations, family relations, self education.' // Added moodScore
        ),
    }),
  },
  output: {
    schema: z.object({
      insights: z.string().describe('Insights on factors influencing mood based on the logged data.'),
    }),
  },
  prompt: `You are a mood analysis expert. Analyze the mood patterns and theme scores provided over time to identify potential factors influencing the user's mood. The theme scores range from -2 (very negative impact/quality) to +2 (very positive impact/quality), with 0 being neutral. The themes are dreaming, moodScore (representing mood quality/stability), training, diet, social relations, family relations, and self education. The 'mood' property represents the primary emotion felt, while 'moodScore' represents an overall assessment of the day's mood quality or stability.

Mood Data (JSON): {{{moodData}}}

Theme Scores (JSON): {{{themeScores}}}

Based on the data:
1. Identify any correlations (positive or negative) between specific themes (e.g., high 'training' score, low 'moodScore') and reported moods (e.g., 'happy', 'sad'). Consider all themes provided, including 'moodScore' and 'family relations'. Analyze how the 'moodScore' relates to the primary 'mood' reported for the day.
2. Note any significant shifts in mood and see if they correspond to changes in theme scores (including 'moodScore') around the same time.
3. Provide concise, actionable insights on what factors might be positively or negatively influencing the user's mood and their perceived mood quality/stability (moodScore).
4. Suggest potential, gentle interventions or areas of focus to improve their well-being based *only* on the observed patterns in the data. Avoid making medical claims or diagnoses.

Format your response clearly, highlighting the key findings and suggestions. Ensure the analysis considers the 'moodScore' and 'family relations' themes alongside the others.`,
});

const analyzeMoodPatternsFlow = ai.defineFlow<
  typeof AnalyzeMoodPatternsInputSchema,
  typeof AnalyzeMoodPatternsOutputSchema
>(
  {
    name: 'analyzeMoodPatternsFlow',
    inputSchema: AnalyzeMoodPatternsInputSchema,
    outputSchema: AnalyzeMoodPatternsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
