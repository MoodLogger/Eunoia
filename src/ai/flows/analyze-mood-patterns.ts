// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Mood pattern analysis AI agent.
 *
 * - analyzeMoodPatterns - A function that handles the mood pattern analysis process.
 * - AnalyzeMoodPatternsInput - The input type for the analyzeMoodPatterns function.
 * - AnalyzeMoodPatternsOutput - The return type for the analyzeMoodPatterns function.
 */

import {ai} from '@/ai/ai-instance';
import {z} from 'genkit';

const AnalyzeMoodPatternsInputSchema = z.object({
  moodData: z
    .string()
    .describe(
      'A stringified JSON array of objects, where each object represents a day and its mood. Each object has date (ISO-8601 format) and mood properties.'
    ),
  themeScores: z
    .string()
    .describe(
      'A stringified JSON array of objects, where each object represents a day and the scores for each of the themes. Each object has date (ISO-8601 format) and scores for themes such as dreaming, trainings, diet, social relations, self education.'
    ),
});
export type AnalyzeMoodPatternsInput = z.infer<typeof AnalyzeMoodPatternsInputSchema>;

const AnalyzeMoodPatternsOutputSchema = z.object({
  insights: z.string().describe('Insights on factors influencing mood based on the logged data.'),
});
export type AnalyzeMoodPatternsOutput = z.infer<typeof AnalyzeMoodPatternsOutputSchema>;

export async function analyzeMoodPatterns(input: AnalyzeMoodPatternsInput): Promise<AnalyzeMoodPatternsOutput> {
  return analyzeMoodPatternsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'analyzeMoodPatternsPrompt',
  input: {
    schema: z.object({
      moodData: z
        .string()
        .describe(
          'A stringified JSON array of objects, where each object represents a day and its mood. Each object has date (ISO-8601 format) and mood properties.'
        ),
      themeScores: z
        .string()
        .describe(
          'A stringified JSON array of objects, where each object represents a day and the scores for each of the themes. Each object has date (ISO-8601 format) and scores for themes such as dreaming, trainings, diet, social relations, self education.'
        ),
    }),
  },
  output: {
    schema: z.object({
      insights: z.string().describe('Insights on factors influencing mood based on the logged data.'),
    }),
  },
  prompt: `You are a mood analysis expert. Analyze the mood patterns and theme scores over time to identify potential factors influencing the user's mood.

Mood Data: {{{moodData}}}

Theme Scores: {{{themeScores}}}

Provide insights on what factors might be positively or negatively influencing the user's mood, and suggest potential interventions to improve their well-being.`,
});

const analyzeMoodPatternsFlow = ai.defineFlow<
  typeof AnalyzeMoodPatternsInputSchema,
  typeof AnalyzeMoodPatternsOutputSchema
>(
  {
    name: 'analyzeMoodPatternsFlow',
    inputSchema: AnalyzeMoodPatternsInputSchema,
    outputSchema: AnalyzeMoodPatternsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
